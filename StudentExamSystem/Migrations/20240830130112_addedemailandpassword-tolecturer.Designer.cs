// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentExamSystem.Model.Datalayer;

namespace StudentExamSystem.Migrations
{
    [DbContext(typeof(studentsContext))]
    [Migration("20240830130112_addedemailandpassword-tolecturer")]
    partial class addedemailandpasswordtolecturer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.ClassCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("coursesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("coursesId");

                    b.ToTable("ClassCourses");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("StudentsId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.LecturerCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LecturerId");

                    b.ToTable("LecturerCourses");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Grade")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("StudentId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("coursesId")
                        .HasColumnType("int");

                    b.Property<int?>("studentsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("coursesId");

                    b.HasIndex("studentsId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("LecturerId")
                        .HasColumnType("int");

                    b.Property<string>("MatricNo")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LecturerId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Class", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Department", null)
                        .WithMany("Classes")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.ClassCourses", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Courses", "courses")
                        .WithMany()
                        .HasForeignKey("coursesId");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Courses", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Lecturer", null)
                        .WithMany("courses")
                        .HasForeignKey("LecturerId");

                    b.HasOne("StudentExamSystem.Model.Datalayer.Students", null)
                        .WithMany("Courses")
                        .HasForeignKey("StudentsId");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.LecturerCourse", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Courses", "course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Department", "department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Lecturer", "lecturer")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Report", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Students", "Student")
                        .WithMany("Report")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Report_Student")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.StudentCourse", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Courses", "courses")
                        .WithMany()
                        .HasForeignKey("coursesId");

                    b.HasOne("StudentExamSystem.Model.Datalayer.Students", "students")
                        .WithMany()
                        .HasForeignKey("studentsId");
                });

            modelBuilder.Entity("StudentExamSystem.Model.Datalayer.Students", b =>
                {
                    b.HasOne("StudentExamSystem.Model.Datalayer.Class", null)
                        .WithMany("info")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Department", null)
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentExamSystem.Model.Datalayer.Lecturer", null)
                        .WithMany("Students")
                        .HasForeignKey("LecturerId");
                });
#pragma warning restore 612, 618
        }
    }
}
